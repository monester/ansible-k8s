- hosts: localhost
  vars:
    install_node: kube-node01
    all_nodes:
      kube-node01: [kube-all, kube-master, ceph-all]
      kube-node02: [kube-all, ceph-all]
      kube-node03: [kube-all, ceph-all]
      kube-node04: [kube-all, ceph-all]
      kube-node05: [kube-all, ceph-all]
      kube-node06: [kube-all, ceph-all]

  tasks:
    - name: deploy servers in Digital Ocean
      digital_ocean:
        name: '{{ item }}'
        unique_name: yes
        image_id : ubuntu-18-04-x64
        # size_id: s-2vcpu-4gb
        size_id: s-1vcpu-2gb
        # size_id: s-1vcpu-1gb
        region_id: ams3
        state: present
        command: droplet
        ssh_key_ids: [1606867]
        user_data: |
          #!/bin/sh

          apt-get update && apt-get install -y apt-transport-https ca-certificates curl software-properties-common python3 make

          # install docker
          # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
          # add-apt-repository "deb https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
          # apt-get update && apt-get install -y docker-ce=$(apt-cache madison docker-ce | grep 18.06 | head -1 | awk '{print $3}')

          # set kubernetes to hold
          # apt-mark hold kubelet kubeadm kubectl

          # install Digital Ocean monitoring
          # curl -sSL https://agent.digitalocean.com/install.sh | sh

      # register: do_hosts
      with_items: '{{ all_nodes.keys()|sort }}'
      register: async_results
      async: 300
      poll: 0

    - name: 'Wait for all servers to be created'
      async_status:
        jid: "{{ item.ansible_job_id }}"
      with_items: "{{ async_results.results }}"
      register: do_hosts
      until: do_hosts.finished
      retries: 30

    - name: create block storage for droplets
      digital_ocean_block_storage:
        command: create
        state: present
        volume_name: '{{ item.droplet.name }}-volume'
        region: '{{ item.droplet.region.slug }}'
        block_size: 10
      with_items: '{{ do_hosts.results }}'

    - name: attach block storage for droplets
      digital_ocean_block_storage:
        command: attach
        state: present
        volume_name: '{{ item.droplet.name }}-volume'
        droplet_id: '{{ item.droplet.id }}'
        region: '{{ item.droplet.region.slug }}'
      with_items: '{{ do_hosts.results }}'

    - add_host:
        name: '{{ item.droplet.name }}'
        ansible_hostname: '{{ item.droplet.name }}'
        ansible_host: '{{ item.droplet.ip_address }}'
        ansible_ssh_user: root
        ansible_python_interpreter: python3
        group: '{{ all_nodes[item.droplet.name] }}'
      loop: '{{ do_hosts.results }}'

- hosts: localhost-root
  tasks:
    - debug:
        var: hostvars

    - name: add nodes to /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: '{{ hostvars[item]["ansible_hostname"] }}'
        line: '{{ hostvars[item]["ansible_host"] }} {{ hostvars[item]["ansible_hostname"] }}'
      loop: '{{ groups["kube-all"] }}'

    - name: add nodes to /etc/ansible/hosts
      lineinfile:
        path: /etc/ansible/hosts
        regexp: '^{{ hostvars[item]["ansible_hostname"] }}'
        line: '{{ hostvars[item]["ansible_hostname"] }} ansible_host={{ hostvars[item]["ansible_host"] }} ansible_user=root ansible_python_interpreter=/usr/bin/python3'
      loop: '{{ groups["kube-all"] }}'

# Install tinc to create private L2 between nodes
- hosts: kube-all
  tasks:
    - apt: name=tinc state=present
    - file: path=/etc/tinc/kube-ha state=directory
    - file: path=/etc/tinc/kube-ha/hosts state=directory

    - template: src=files/tinc/tinc.conf dest=/etc/tinc/kube-ha/tinc.conf
    - template: src=files/tinc/hostname dest='/etc/tinc/kube-ha/hosts/{{ item|replace("-", "") }}'
      with_items: '{{ groups["kube-all"] }}'
    - copy: src=files/tinc/id_rsa dest=/etc/tinc/kube-ha/rsa_key.priv mode=0600
    - template: src=files/tinc/tinc-up dest=/etc/tinc/kube-ha/tinc-up mode=0755
    - copy: src=files/tinc/tinc-down dest=/etc/tinc/kube-ha/tinc-down mode=0755

    - systemd: name=tinc@kube-ha state=started enabled=True

- hosts: kube-all
  tasks:
    - name: add nodes to /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: '{{ hostvars[item]["ansible_hostname"] }}'
        line: '{{ hostvars[item]["ansible_host"] }} {{ hostvars[item]["ansible_hostname"] }}'
      loop: '{{ groups["kube-all"] }}'

# - import_playbook: playbook-ceph-deploy.yaml

# - import_playbook: playbook-k8s.yaml

# - import_playbook: playbook-ceph-cs.yaml
